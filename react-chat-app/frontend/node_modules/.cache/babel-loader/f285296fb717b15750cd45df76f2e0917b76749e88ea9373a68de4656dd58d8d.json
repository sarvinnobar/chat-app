{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heroism\\\\Documents\\\\Projects\\\\Abcurrent\\\\messageapp\\\\frontend\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect, useRef } from \"react\";\nimport MessageBody from \"./MessageBody\";\nimport MessageFooter from \"./MessageFooter\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Message({\n  socket\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [typingStatus, setTypingStatus] = useState(\"\");\n  const lastMessageRef = useRef(null);\n  useEffect(() => {\n    socket.on(\"messageResponse\", data => setMessages([...messages, data]));\n  }, [socket, messages]);\n  useEffect(() => {\n    socket.on(\"typingResponse\", ndata => setTypingStatus(ndata));\n  }, [socket, messages]);\n  useEffect(() => {\n    var _lastMessageRef$curre;\n    // 👇️ scroll to bottom every time messages change\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    socket.on(\"typingResponse\", data => setTypingStatus(data));\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__main\",\n      children: [/*#__PURE__*/_jsxDEV(MessageBody, {\n        messages: messages,\n        typingThis: typingStatus,\n        lastMessageRef: lastMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageFooter, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"cw7YB5549v6AGzJ3SLIF69YydAY=\");\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageBody","MessageFooter","Header","jsxDEV","_jsxDEV","Message","socket","_s","messages","setMessages","typingStatus","setTypingStatus","lastMessageRef","on","data","ndata","_lastMessageRef$curre","current","scrollIntoView","behavior","className","children","typingThis","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Heroism/Documents/Projects/Abcurrent/messageapp/frontend/src/components/Message.js"],"sourcesContent":["import { React, useState, useEffect, useRef } from \"react\";\r\n\r\nimport MessageBody from \"./MessageBody\";\r\nimport MessageFooter from \"./MessageFooter\";\r\nimport Header from \"./Header\";\r\n\r\nexport default function Message({ socket }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [typingStatus, setTypingStatus] = useState(\"\");\r\n  const lastMessageRef = useRef(null);\r\n  useEffect(() => {\r\n    socket.on(\"messageResponse\", (data) => setMessages([...messages, data]));\r\n  }, [socket, messages]);\r\n  useEffect(() => {\r\n    socket.on(\"typingResponse\", (ndata) => setTypingStatus(ndata));\r\n  }, [socket, messages]);\r\n\r\n  useEffect(() => {\r\n    // 👇️ scroll to bottom every time messages change\r\n    lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n  useEffect(() => {\r\n    socket.on(\"typingResponse\", (data) => setTypingStatus(data));\r\n  }, [socket]);\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__main\">\r\n        {/* <Header /> */}\r\n        <MessageBody\r\n          messages={messages}\r\n          typingThis={typingStatus}\r\n          lastMessageRef={lastMessageRef}\r\n        />\r\n        <MessageFooter socket={socket} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMe,cAAc,GAAGb,MAAM,CAAC,IAAI,CAAC;EACnCD,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACO,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAKL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,IAAI,CAAC,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACR,MAAM,EAAEE,QAAQ,CAAC,CAAC;EACtBV,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACO,EAAE,CAAC,gBAAgB,EAAGE,KAAK,IAAKJ,eAAe,CAACI,KAAK,CAAC,CAAC;EAChE,CAAC,EAAE,CAACT,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtBV,SAAS,CAAC,MAAM;IAAA,IAAAkB,qBAAA;IACd;IACA,CAAAA,qBAAA,GAAAJ,cAAc,CAACK,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EACdV,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACO,EAAE,CAAC,gBAAgB,EAAGC,IAAI,IAAKH,eAAe,CAACG,IAAI,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EACZ,oBACEF,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBjB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAEzBjB,OAAA,CAACJ,WAAW;QACVQ,QAAQ,EAAEA,QAAS;QACnBc,UAAU,EAAEZ,YAAa;QACzBE,cAAc,EAAEA;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFtB,OAAA,CAACH,aAAa;QAACK,MAAM,EAAEA;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA/BuBF,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}