{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heroism\\\\Documents\\\\Projects\\\\Abcurrent\\\\messageapp\\\\frontend\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport MessageStyle from \"../assets/Styles/Message.module.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3000\"); // Replace with your server URL\n\nexport default function Message() {\n  _s();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit(\"message\", currentMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"message\", message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  const isSending = true;\n  var messageBoxStyle;\n  if (isSending) {\n    messageBoxStyle = MessageStyle.youSend;\n  } else {\n    messageBoxStyle = MessageStyle.youReceive;\n  }\n  const cakes = [\"strawberry\", \"banana\", \"vanilla\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${MessageStyle.messageDiv} ${messageBoxStyle}`,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `${MessageStyle.youSend}`,\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), cakes.map((slice, sliceIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${MessageStyle.messageDiv} ${messageBoxStyle}`,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `${MessageStyle.youSend}`,\n        children: slice\n      }, sliceIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), messageBoxStyle = true, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${MessageStyle.messageDiv} ${messageBoxStyle}`,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `${MessageStyle.youSend}`,\n        children: \"njsn?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: currentMessage,\n        onChange: e => setCurrentMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Message, \"XlhKChQaqhtbMab128LDM1HYMNM=\");\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["MessageStyle","React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Message","_s","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","emit","on","message","prevMessages","isSending","messageBoxStyle","youSend","youReceive","cakes","children","className","messageDiv","map","index","fileName","_jsxFileName","lineNumber","columnNumber","slice","sliceIndex","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Heroism/Documents/Projects/Abcurrent/messageapp/frontend/src/components/Message.js"],"sourcesContent":["import MessageStyle from \"../assets/Styles/Message.module.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:3000\"); // Replace with your server URL\r\n\r\nexport default function Message() {\r\n  // State for storing messages and current message\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  // Function to send a message\r\n  const sendMessage = () => {\r\n    if (currentMessage) {\r\n      socket.emit(\"message\", currentMessage);\r\n      setCurrentMessage(\"\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Listen for incoming messages\r\n    socket.on(\"message\", (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n  }, []);\r\n\r\n  const isSending = true;\r\n\r\n  var messageBoxStyle;\r\n  if (isSending) {\r\n    messageBoxStyle = MessageStyle.youSend;\r\n  } else {\r\n    messageBoxStyle = MessageStyle.youReceive;\r\n  }\r\n  const cakes = [\"strawberry\", \"banana\", \"vanilla\"];\r\n  return (\r\n    <>\r\n      <div className={`${MessageStyle.messageDiv} ${messageBoxStyle}`}>\r\n        <h2 className={`${MessageStyle.youSend}`}>\r\n          {messages.map((message, index) => (\r\n            <div key={index}>{message}</div>\r\n          ))}\r\n        </h2>\r\n      </div>\r\n      {cakes.map((slice, sliceIndex) => (\r\n        <div className={`${MessageStyle.messageDiv} ${messageBoxStyle}`}>\r\n          <h2 className={`${MessageStyle.youSend}`} key={sliceIndex}>\r\n            {slice}\r\n          </h2>\r\n        </div>\r\n      ))}\r\n      {(messageBoxStyle = true)}\r\n      <div className={`${MessageStyle.messageDiv} ${messageBoxStyle}`}>\r\n        <h2 className={`${MessageStyle.youSend}`}>njsn?</h2>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={currentMessage}\r\n          onChange={(e) => setCurrentMessage(e.target.value)}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}