{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heroism\\\\Documents\\\\Projects\\\\Abcurrent\\\\messageapp\\\\frontend\\\\src\\\\messfunc\\\\MessMain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3000\"); // Replace with your server URL\nfunction MessMain() {\n  _s();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit(\"message\", currentMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"message\", message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message...\",\n      value: currentMessage,\n      onChange: e => setCurrentMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(MessMain, \"XlhKChQaqhtbMab128LDM1HYMNM=\");\n_c = MessMain;\nexport default MessMain;\nvar _c;\n$RefreshReg$(_c, \"MessMain\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","MessMain","_s","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","emit","on","message","prevMessages","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Heroism/Documents/Projects/Abcurrent/messageapp/frontend/src/messfunc/MessMain.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:3000\"); // Replace with your server URL\r\nfunction MessMain() {\r\n  // State for storing messages and current message\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  // Function to send a message\r\n  const sendMessage = () => {\r\n    if (currentMessage) {\r\n      socket.emit(\"message\", currentMessage);\r\n      setCurrentMessage(\"\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Listen for incoming messages\r\n    socket.on(\"message\", (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      {messages.map((message, index) => (\r\n        <div key={index} className=\"message\">\r\n          {message}\r\n        </div>\r\n      ))}\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message...\"\r\n        value={currentMessage}\r\n        onChange={(e) => setCurrentMessage(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\nexport default MessMain;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;AAC5C,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,cAAc,EAAE;MAClBL,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAEH,cAAc,CAAC;MACtCC,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EACDV,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACS,EAAE,CAAC,SAAS,EAAGC,OAAO,IAAK;MAChCN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBV,QAAQ,CAACW,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBAC3BhB,OAAA;MAAiBa,SAAS,EAAC,SAAS;MAAAC,QAAA,EACjCH;IAAO,GADAK,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC,eAEFpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEjB,cAAe;MACtBkB,QAAQ,EAAGC,CAAC,IAAKlB,iBAAiB,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACFpB,OAAA;MAAQ2B,OAAO,EAAEnB,WAAY;MAAAM,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACjB,EAAA,CAlCQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}